{
    "type": "error",
    "data": "Error running pipeline!",
    "stack": "Traceback (most recent call last):\n  File \"C:\\Users\\10277\\anaconda3\\Lib\\site-packages\\graphrag\\index\\run\\run_pipeline.py\", line 129, in _run_pipeline\n    result = await workflow_function(config, context)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\10277\\anaconda3\\Lib\\site-packages\\graphrag\\index\\workflows\\extract_graph.py\", line 46, in run_workflow\n    entities, relationships, raw_entities, raw_relationships = await extract_graph(\n                                                               ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\10277\\anaconda3\\Lib\\site-packages\\graphrag\\index\\workflows\\extract_graph.py\", line 88, in extract_graph\n    extracted_entities, extracted_relationships = await extractor(\n                                                  ^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\10277\\anaconda3\\Lib\\site-packages\\graphrag\\index\\operations\\extract_graph\\extract_graph.py\", line 84, in extract_graph\n    relationships = _merge_relationships(relationship_dfs)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\10277\\anaconda3\\Lib\\site-packages\\graphrag\\index\\operations\\extract_graph\\extract_graph.py\", line 121, in _merge_relationships\n    .agg(\n     ^^^^\n  File \"C:\\Users\\10277\\anaconda3\\Lib\\site-packages\\pandas\\core\\groupby\\generic.py\", line 1432, in aggregate\n    result = op.agg()\n             ^^^^^^^^\n  File \"C:\\Users\\10277\\anaconda3\\Lib\\site-packages\\pandas\\core\\apply.py\", line 190, in agg\n    return self.agg_dict_like()\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\10277\\anaconda3\\Lib\\site-packages\\pandas\\core\\apply.py\", line 423, in agg_dict_like\n    return self.agg_or_apply_dict_like(op_name=\"agg\")\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\10277\\anaconda3\\Lib\\site-packages\\pandas\\core\\apply.py\", line 1608, in agg_or_apply_dict_like\n    result_index, result_data = self.compute_dict_like(\n                                ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\10277\\anaconda3\\Lib\\site-packages\\pandas\\core\\apply.py\", line 462, in compute_dict_like\n    func = self.normalize_dictlike_arg(op_name, selected_obj, func)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\10277\\anaconda3\\Lib\\site-packages\\pandas\\core\\apply.py\", line 663, in normalize_dictlike_arg\n    raise KeyError(f\"Column(s) {list(cols)} do not exist\")\nKeyError: \"Column(s) ['description', 'source_id', 'weight'] do not exist\"\n",
    "source": "\"Column(s) ['description', 'source_id', 'weight'] do not exist\"",
    "details": null
}
{
    "type": "error",
    "data": "Error running pipeline!",
    "stack": "Traceback (most recent call last):\n  File \"C:\\Users\\10277\\anaconda3\\Lib\\site-packages\\graphrag\\index\\run\\run_pipeline.py\", line 129, in _run_pipeline\n    result = await workflow_function(config, context)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\10277\\anaconda3\\Lib\\site-packages\\graphrag\\index\\workflows\\extract_graph.py\", line 46, in run_workflow\n    entities, relationships, raw_entities, raw_relationships = await extract_graph(\n                                                               ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\10277\\anaconda3\\Lib\\site-packages\\graphrag\\index\\workflows\\extract_graph.py\", line 88, in extract_graph\n    extracted_entities, extracted_relationships = await extractor(\n                                                  ^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\10277\\anaconda3\\Lib\\site-packages\\graphrag\\index\\operations\\extract_graph\\extract_graph.py\", line 84, in extract_graph\n    relationships = _merge_relationships(relationship_dfs)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\10277\\anaconda3\\Lib\\site-packages\\graphrag\\index\\operations\\extract_graph\\extract_graph.py\", line 121, in _merge_relationships\n    .agg(\n     ^^^^\n  File \"C:\\Users\\10277\\anaconda3\\Lib\\site-packages\\pandas\\core\\groupby\\generic.py\", line 1432, in aggregate\n    result = op.agg()\n             ^^^^^^^^\n  File \"C:\\Users\\10277\\anaconda3\\Lib\\site-packages\\pandas\\core\\apply.py\", line 190, in agg\n    return self.agg_dict_like()\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\10277\\anaconda3\\Lib\\site-packages\\pandas\\core\\apply.py\", line 423, in agg_dict_like\n    return self.agg_or_apply_dict_like(op_name=\"agg\")\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\10277\\anaconda3\\Lib\\site-packages\\pandas\\core\\apply.py\", line 1608, in agg_or_apply_dict_like\n    result_index, result_data = self.compute_dict_like(\n                                ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\10277\\anaconda3\\Lib\\site-packages\\pandas\\core\\apply.py\", line 462, in compute_dict_like\n    func = self.normalize_dictlike_arg(op_name, selected_obj, func)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\10277\\anaconda3\\Lib\\site-packages\\pandas\\core\\apply.py\", line 663, in normalize_dictlike_arg\n    raise KeyError(f\"Column(s) {list(cols)} do not exist\")\nKeyError: \"Column(s) ['description', 'source_id', 'weight'] do not exist\"\n",
    "source": "\"Column(s) ['description', 'source_id', 'weight'] do not exist\"",
    "details": null
}
{
    "type": "error",
    "data": "Error running pipeline!",
    "stack": "Traceback (most recent call last):\n  File \"C:\\Users\\10277\\anaconda3\\Lib\\site-packages\\graphrag\\index\\run\\run_pipeline.py\", line 129, in _run_pipeline\n    result = await workflow_function(config, context)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\10277\\anaconda3\\Lib\\site-packages\\graphrag\\index\\workflows\\extract_graph.py\", line 46, in run_workflow\n    entities, relationships, raw_entities, raw_relationships = await extract_graph(\n                                                               ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\10277\\anaconda3\\Lib\\site-packages\\graphrag\\index\\workflows\\extract_graph.py\", line 88, in extract_graph\n    extracted_entities, extracted_relationships = await extractor(\n                                                  ^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\10277\\anaconda3\\Lib\\site-packages\\graphrag\\index\\operations\\extract_graph\\extract_graph.py\", line 84, in extract_graph\n    relationships = _merge_relationships(relationship_dfs)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\10277\\anaconda3\\Lib\\site-packages\\graphrag\\index\\operations\\extract_graph\\extract_graph.py\", line 121, in _merge_relationships\n    .agg(\n     ^^^^\n  File \"C:\\Users\\10277\\anaconda3\\Lib\\site-packages\\pandas\\core\\groupby\\generic.py\", line 1432, in aggregate\n    result = op.agg()\n             ^^^^^^^^\n  File \"C:\\Users\\10277\\anaconda3\\Lib\\site-packages\\pandas\\core\\apply.py\", line 190, in agg\n    return self.agg_dict_like()\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\10277\\anaconda3\\Lib\\site-packages\\pandas\\core\\apply.py\", line 423, in agg_dict_like\n    return self.agg_or_apply_dict_like(op_name=\"agg\")\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\10277\\anaconda3\\Lib\\site-packages\\pandas\\core\\apply.py\", line 1608, in agg_or_apply_dict_like\n    result_index, result_data = self.compute_dict_like(\n                                ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\10277\\anaconda3\\Lib\\site-packages\\pandas\\core\\apply.py\", line 462, in compute_dict_like\n    func = self.normalize_dictlike_arg(op_name, selected_obj, func)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\10277\\anaconda3\\Lib\\site-packages\\pandas\\core\\apply.py\", line 663, in normalize_dictlike_arg\n    raise KeyError(f\"Column(s) {list(cols)} do not exist\")\nKeyError: \"Column(s) ['description', 'source_id', 'weight'] do not exist\"\n",
    "source": "\"Column(s) ['description', 'source_id', 'weight'] do not exist\"",
    "details": null
}
